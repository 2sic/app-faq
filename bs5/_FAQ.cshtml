@inherits Custom.Hybrid.Razor12
@using ToSic.Razor.Blade;
@using ToSic.Sxc.Services;
@{
  // Get some helper commands for later on
  var helpers = CreateInstance("../shared/Helpers.cs");
  // Merge the settings on Content with the predefined Settings
  var faqSettings = AsDynamic(Content, Settings);

  // Toolbar Configurations for later
  var mainToolbar = new [] { "+contentitems&pos=2?contentType=Question" };  // add the content-items button
  var catToolbar = new [] { "toolbar=empty&hover=left", "contentitems?contentType=Category" };
  var qToolbar = new [] { "-layout", "%new&show=true?contentType=Question&entityId=0" };
  var render = GetService<IRenderService>();
}
<div class="app-faq4-js-@CmsContext.Module.Id position-relative" @Edit.TagToolbar(Content, toolbar: mainToolbar )>
	<div class="app-faq4-wrapper" @Edit.Attribute("quick-edit-config", new { modules = new {  enable = true }})>
    @* Display the categories *@
    @if (faqSettings.UseCategories && faqSettings.Categories.Count > 1) {
			<div class="app-faq4-category-wrapper mb-3" @Edit.TagToolbar(toolbar: catToolbar)>
        <ul class="px-0">
          <li class="btn btn-outline-primary" data-filter="nofilter">
            @Resources.LabelShowAll
          </li>
          @foreach (var c in Content.Categories) {
            <li class="btn btn-outline-primary" data-filter="@c.Key">
              @c.Name
            </li>
          }
        </ul>
      </div>
    }

    @* List the questions *@

    <div class="app-faq4-question-wrapper accordion accordion-flush" @Edit.Attribute("quick-edit-config", new { modules = new {  enable = true }})>
       @foreach (var q in helpers.GetQuestionsSorted()) {

        // get the categories for interactive (JavaScript) filtering
        var qCats = AsList(q.Categories as object).Select(x => x.Key);
        var initiallyExpanded = Convert.ToBool(q.InitiallyExpanded, fallback: false);
        var icon = Text.First(q.Icon, "fa-question-circle");     

        <div class="accordion-item" data-filterelem="@Convert.Json.ToJson(qCats)" @Edit.TagToolbar(q, toolbar: qToolbar)>
          <h2 class="accordion-header" id="headingOne">
            <button class='accordion-button @(initiallyExpanded ? "" : "collapsed")' @helpers.AdminHelperLabel(q) type="button" data-bs-toggle="collapse" data-bs-target="#a-@q.EntityId" aria-expanded="true" aria-controls="a-@q.EntityId">
              <span><i class="me-3 co-icon fas @icon" aria-hidden="true"></i></span>
              @Tags.Nl2Br(q.Question)
            </button>
          </h2>
          <div id="a-@q.EntityId" class='accordion-collapse collapse @(initiallyExpanded ? "show" : "")' aria-labelledby="a-@q.EntityId">
            <div class="accordion-body" data-accordion-child="@q.EntityId">
              @render.All(q, field: "AnswerInnerContent", merge: q.Answer)
            </div>
          </div>
        </div>
      }
    </div>

	</div>
</div>

@Html.Partial("./_FAQ.PartAssets.cshtml")