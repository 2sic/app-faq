@inherits Custom.Hybrid.RazorTyped
@using System.Linq;
@using ToSic.Razor.Blade;
@* It is a separate file and not from BS5 Folder, because accordion comes from another library, because there is no such thing in bs3  *@
@{
  // The main configuration comprises the substance of the current module.
  var config = MyItem;
  var categories = config.Children("Categories");

  // Get some helper commands for later on
  var helpers = GetCode("../shared/Helpers.cs");
  
  // Toolbar Configurations for later
  var mainToolbar = Kit.Toolbar.Default()
    .Data("Question", tweak: b => b.Position(2));

   // Toolbar to manage categories
  var catToolbar = Kit.Toolbar.Empty()
    .Settings(hover: "left")
    .Data("Category");

  // Toolbar without Layout Button
  var qToolbar = Kit.Toolbar.Default().Layout("-");
}

<div class="app-faq4-js-@UniqueKey position-relative" @mainToolbar.For(config)>
	<div class="app-faq4-wrapper" @Kit.Edit.Attribute("quick-edit-config", new { modules = new {  enable = true }})>
    @* Display the categories *@
    @if (App.Settings.Bool("UseCategories") && categories.Count() > 1) {
			<div class="app-faq4-category-wrapper" @catToolbar>
        <ul>
          <li class="btn btn-primary" data-filter="nofilter">
            @App.Resources.String("LabelShowAll")
          </li>
          @foreach (var c in categories) {
            <li class="btn btn-primary" data-filter="@c.String("Key")">
              @c.String("Name")
            </li>
          }
        </ul>
      </div>
    }

    @* Add some space for toolbar if no categories shown *@
    @if (MyUser.IsContentAdmin && !App.Settings.Bool("UseCategories")) {
      <div style="padding: 1.5rem 0"></div>
    }

    @* List the questions *@
    <div>
			<div class="app-faq4-question-wrapper">
			@foreach (var q in AsItems(MyData["Questions"])) {
				// get the categories for interactive (JavaScript) filtering
				var qCats = q.Children("Categories").Select(x => x.String("Key"));
				// should this be expanded initially? default is false
				var initiallyExpanded = q.Bool("InitiallyExpanded");
				// use the icon or default to question-circle
				var icon = Text.First(q.String("Icon"), "fa-question-circle");

				<div class='app-faq4-item @(initiallyExpanded ? "is-expanded" : "")' data-filterelem="@Kit.Json.ToJson(qCats)" @qToolbar.For(q)>
						@* title bar with expansion icon *@
						<div id="hash-@q.Id" class='app-faq4-title' data-accordion-parent="@q.Id">
							<h2 @helpers.AdminHelperLabel(q)>
								<span><i class="fas @icon" aria-hidden="true"></i></span>
								@Tags.Nl2Br(q.String("Question"))
							</h2>

              @* Up / Down arrows as SVG - hidden by default, become visible based on CSS *@
              <svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="chevron-down" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" class="svg-inline--fa fa-chevron-down fa-w-14"><path fill="currentColor" d="M207.029 381.476L12.686 187.132c-9.373-9.373-9.373-24.569 0-33.941l22.667-22.667c9.357-9.357 24.522-9.375 33.901-.04L224 284.505l154.745-154.021c9.379-9.335 24.544-9.317 33.901.04l22.667 22.667c9.373 9.373 9.373 24.569 0 33.941L240.971 381.476c-9.373 9.372-24.569 9.372-33.942 0z" class=""></path></svg>
              <svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="chevron-up" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" class="svg-inline--fa fa-chevron-up fa-w-14"><path fill="currentColor" d="M240.971 130.524l194.343 194.343c9.373 9.373 9.373 24.569 0 33.941l-22.667 22.667c-9.357 9.357-24.522 9.375-33.901.04L224 227.495 69.255 381.516c-9.379 9.335-24.544 9.317-33.901-.04l-22.667-22.667c-9.373-9.373-9.373-24.569 0-33.941L207.03 130.525c9.372-9.373 24.568-9.373 33.941-.001z" class=""></path></svg>
            </div>

						@* Show the answer; compact or expanded *@
						<div class='app-faq4-content @(initiallyExpanded ? "is-expanded" : "")' data-accordion-child="@q.Id">
							@q.Html("Answer")
						</div>
				</div>
			}
			</div>
    </div>
	</div>
</div>

@Html.Partial("../bs5/Assets.cshtml")