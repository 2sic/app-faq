@inherits Custom.Hybrid.Razor12
@using ToSic.Razor.Blade;
@using ToSic.Sxc.Blocks;
@{
  // Get some helper commands for later on
  var helpers = CreateInstance("../shared/Helpers.cs");
  // Merge the settings on Content with the predefined Settings
  var faqSettings = AsDynamic(Content, Settings);

  // Toolbar Configurations for later
  var mainToolbar = new [] { "+contentitems&pos=2?contentType=Question" };  // add the content-items button
  var catToolbar = new [] { "toolbar=empty&hover=left", "contentitems?contentType=Category" };
  var qToolbar = new [] { "-layout", "%new&show=true?contentType=Question&entityId=0" };
}
<div class="app-faq4-js-@CmsContext.Module.Id position-relative" @Edit.TagToolbar(Content, toolbar: mainToolbar )>
	<div class="app-faq4-wrapper" @Edit.Attribute("quick-edit-config", new { modules = new {  enable = true }})>
    @* Display the categories *@
    @if (faqSettings.UseCategories && faqSettings.Categories.Count > 1) {
			<div class="app-faq4-category-wrapper" @Edit.TagToolbar(toolbar: catToolbar)>
        <ul>
          <li class="btn btn-outline-primary" data-filter="nofilter">
            @Resources.LabelShowAll
          </li>
          @foreach (var c in Content.Categories) {
            <li class="btn btn-outline-primary" data-filter="@c.Key">
              @c.Name
            </li>
          }
        </ul>
      </div>
    }

    @* List the questions *@
    <div>
			<div class="app-faq4-question-wrapper">
			@foreach (var q in helpers.GetQuestionsSorted()) {
				// get the categories for interactive (JavaScript) filtering
        var qCats = AsList(q.Categories as object).Select(x => x.Key);
				var initiallyExpanded = Convert.ToBool(q.InitiallyExpanded, fallback: false);
				var icon = Text.First(q.Icon, "fa-question-circle");                  // icon? default ...-circle

				<div data-filterelem="@Convert.Json.ToJson(qCats)" @Edit.TagToolbar(q, toolbar: qToolbar)>
          @* title bar with expansion icon *@
          <div id="hash-@q.EntityId" class='app-faq4-title @(initiallyExpanded ? "active" : "")'>
            <h2 @helpers.AdminHelperLabel(q)>
              <span><i class="fas @icon" aria-hidden="true"></i></span>
              @Tags.Nl2Br(q.Question)
            </h2>
          </div>

          @* Show the answer; compact or expanded *@
          <div class='app-faq4-content @(initiallyExpanded ? "d-block" : "")'>
            @Render.All(q, field: "AnswerInnerContent", merge: q.Answer)
          </div>
				</div>
			}
			</div>
    </div>
	</div>
</div>

@Html.Partial("./_FAQ.PartAssets.cshtml")